diff --git a/drivers/md/bcache/movinggc.c b/drivers/md/bcache/movinggc.c
index 5c4bdde..99659fe 100644
--- a/drivers/md/bcache/movinggc.c
+++ b/drivers/md/bcache/movinggc.c
@@ -34,14 +34,16 @@ static bool moving_pred(struct keybuf *buf, struct bkey *k)
 
 /* Moving GC - IO loop */
 
-static void moving_io_destructor(struct closure *cl)
+static void moving_io_destructor(struct work_struct *work)
 {
+	struct closure *cl = container_of(work, struct closure, work);
 	struct moving_io *io = container_of(cl, struct moving_io, cl);
 	kfree(io);
 }
 
-static void write_moving_finish(struct closure *cl)
+static void write_moving_finish(struct work_struct *work)
 {
+	struct closure *cl = container_of(work, struct closure, work);
 	struct moving_io *io = container_of(cl, struct moving_io, cl);
 	struct bio *bio = &io->bio.bio;
 
@@ -89,8 +91,9 @@ static void moving_init(struct moving_io *io)
 	bch_bio_map(bio, NULL);
 }
 
-static void write_moving(struct closure *cl)
+static void write_moving(struct work_struct *work)
 {
+	struct closure *cl = container_of(work, struct closure, work);
 	struct moving_io *io = container_of(cl, struct moving_io, cl);
 	struct data_insert_op *op = &io->op;
 
@@ -113,8 +116,9 @@ static void write_moving(struct closure *cl)
 	continue_at(cl, write_moving_finish, op->wq);
 }
 
-static void read_moving_submit(struct closure *cl)
+static void read_moving_submit(struct work_struct *work)
 {
+	struct closure *cl = container_of(work, struct closure, work);
 	struct moving_io *io = container_of(cl, struct moving_io, cl);
 	struct bio *bio = &io->bio.bio;
 
