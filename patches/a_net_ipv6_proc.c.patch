diff --git a/net/ipv6/proc.c b/net/ipv6/proc.c
index cc8e3ae..6572951 100644
--- a/net/ipv6/proc.c
+++ b/net/ipv6/proc.c
@@ -156,7 +156,7 @@ static const struct snmp_mib snmp6_udplite6_list[] = {
 	SNMP_MIB_SENTINEL
 };
 
-static void snmp6_seq_show_icmpv6msg(struct seq_file *seq, atomic_long_t *smib)
+static void snmp6_seq_show_icmpv6msg(struct seq_file *seq, atomic_long_unchecked_t *smib)
 {
 	char name[32];
 	int i;
@@ -173,14 +173,14 @@ static void snmp6_seq_show_icmpv6msg(struct seq_file *seq, atomic_long_t *smib)
 		snprintf(name, sizeof(name), "Icmp6%s%s",
 			i & 0x100 ? "Out" : "In", p);
 		seq_printf(seq, "%-32s\t%lu\n", name,
-			   atomic_long_read(smib + i));
+			   atomic_long_read_unchecked(smib + i));
 	}
 
 	/* print by number (nonzero only) - ICMPMsgStat format */
 	for (i = 0; i < ICMP6MSG_MIB_MAX; i++) {
 		unsigned long val;
 
-		val = atomic_long_read(smib + i);
+		val = atomic_long_read_unchecked(smib + i);
 		if (!val)
 			continue;
 		snprintf(name, sizeof(name), "Icmp6%sType%u",
@@ -193,7 +193,7 @@ static void snmp6_seq_show_icmpv6msg(struct seq_file *seq, atomic_long_t *smib)
  * or shared one (smib != NULL)
  */
 static void snmp6_seq_show_item(struct seq_file *seq, void __percpu *pcpumib,
-				atomic_long_t *smib,
+				atomic_long_unchecked_t *smib,
 				const struct snmp_mib *itemlist)
 {
 	unsigned long buff[SNMP_MIB_MAX];
@@ -209,7 +209,7 @@ static void snmp6_seq_show_item(struct seq_file *seq, void __percpu *pcpumib,
 	} else {
 		for (i = 0; itemlist[i].name; i++)
 			seq_printf(seq, "%-32s\t%lu\n", itemlist[i].name,
-				   atomic_long_read(smib + itemlist[i].entry));
+				   atomic_long_read_unchecked(smib + itemlist[i].entry));
 	}
 }
 
@@ -324,7 +324,7 @@ static int __net_init ipv6_proc_init_net(struct net *net)
 	if (!proc_create("snmp6", S_IRUGO, net->proc_net, &snmp6_seq_fops))
 		goto proc_snmp6_fail;
 
-	net->mib.proc_net_devsnmp6 = proc_mkdir("dev_snmp6", net->proc_net);
+	net->mib.proc_net_devsnmp6 = proc_mkdir_restrict("dev_snmp6", net->proc_net);
 	if (!net->mib.proc_net_devsnmp6)
 		goto proc_dev_snmp6_fail;
 	return 0;
