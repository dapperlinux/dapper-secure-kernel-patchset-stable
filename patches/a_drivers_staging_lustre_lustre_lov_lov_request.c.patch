diff --git a/drivers/staging/lustre/lustre/lov/lov_request.c b/drivers/staging/lustre/lustre/lov/lov_request.c
index 09dcaf4..8d02a46 100644
--- a/drivers/staging/lustre/lustre/lov/lov_request.c
+++ b/drivers/staging/lustre/lustre/lov/lov_request.c
@@ -41,9 +41,9 @@
 static void lov_init_set(struct lov_request_set *set)
 {
 	set->set_count = 0;
-	atomic_set(&set->set_completes, 0);
-	atomic_set(&set->set_success, 0);
-	atomic_set(&set->set_finish_checked, 0);
+	atomic_set_unchecked(&set->set_completes, 0);
+	atomic_set_unchecked(&set->set_success, 0);
+	atomic_set_unchecked(&set->set_finish_checked, 0);
 	set->set_cookies = NULL;
 	INIT_LIST_HEAD(&set->set_list);
 	atomic_set(&set->set_refcount, 1);
@@ -71,14 +71,14 @@ void lov_finish_set(struct lov_request_set *set)
 
 static int lov_set_finished(struct lov_request_set *set, int idempotent)
 {
-	int completes = atomic_read(&set->set_completes);
+	int completes = atomic_read_unchecked(&set->set_completes);
 
 	CDEBUG(D_INFO, "check set %d/%d\n", completes, set->set_count);
 
 	if (completes == set->set_count) {
 		if (idempotent)
 			return 1;
-		if (atomic_inc_return(&set->set_finish_checked) == 1)
+		if (atomic_inc_return_unchecked(&set->set_finish_checked) == 1)
 			return 1;
 	}
 	return 0;
@@ -90,9 +90,9 @@ static void lov_update_set(struct lov_request_set *set,
 	req->rq_complete = 1;
 	req->rq_rc = rc;
 
-	atomic_inc(&set->set_completes);
+	atomic_inc_unchecked(&set->set_completes);
 	if (rc == 0)
-		atomic_inc(&set->set_success);
+		atomic_inc_unchecked(&set->set_success);
 
 	wake_up(&set->set_waitq);
 }
@@ -192,7 +192,7 @@ static int common_attr_done(struct lov_request_set *set)
 	if (!set->set_oi->oi_oa)
 		return 0;
 
-	if (!atomic_read(&set->set_success))
+	if (!atomic_read_unchecked(&set->set_success))
 		return -EIO;
 
 	tmp_oa = kmem_cache_zalloc(obdo_cachep, GFP_NOFS);
@@ -239,7 +239,7 @@ int lov_fini_getattr_set(struct lov_request_set *set)
 	if (!set)
 		return 0;
 	LASSERT(set->set_exp);
-	if (atomic_read(&set->set_completes))
+	if (atomic_read_unchecked(&set->set_completes))
 		rc = common_attr_done(set);
 
 	lov_put_reqset(set);
@@ -332,7 +332,7 @@ int lov_fini_setattr_set(struct lov_request_set *set)
 	if (!set)
 		return 0;
 	LASSERT(set->set_exp);
-	if (atomic_read(&set->set_completes)) {
+	if (atomic_read_unchecked(&set->set_completes)) {
 		rc = common_attr_done(set);
 		/* FIXME update qos data here */
 	}
@@ -493,9 +493,9 @@ int lov_fini_statfs_set(struct lov_request_set *set)
 	if (!set)
 		return 0;
 
-	if (atomic_read(&set->set_completes)) {
+	if (atomic_read_unchecked(&set->set_completes)) {
 		rc = lov_fini_statfs(set->set_obd, set->set_oi->oi_osfs,
-				     atomic_read(&set->set_success));
+				     atomic_read_unchecked(&set->set_success));
 	}
 	lov_put_reqset(set);
 	return rc;
@@ -576,7 +576,7 @@ static int cb_statfs_update(void *cookie, int rc)
 	lov = &lovobd->u.lov;
 	osfs = set->set_oi->oi_osfs;
 	lov_sfs = oinfo->oi_osfs;
-	success = atomic_read(&set->set_success);
+	success = atomic_read_unchecked(&set->set_success);
 	/* XXX: the same is done in lov_update_common_set, however
 	 * lovset->set_exp is not initialized.
 	 */
@@ -604,7 +604,7 @@ static int cb_statfs_update(void *cookie, int rc)
 	if (set->set_oi->oi_flags & OBD_STATFS_PTLRPCD &&
 	    lov_set_finished(set, 0)) {
 		lov_statfs_interpret(NULL, set, set->set_count !=
-				     atomic_read(&set->set_success));
+				     atomic_read_unchecked(&set->set_success));
 	}
 
 	return 0;
