diff --git a/include/linux/lockref.h b/include/linux/lockref.h
index b10b122..d37b3de 100644
--- a/include/linux/lockref.h
+++ b/include/linux/lockref.h
@@ -28,7 +28,7 @@ struct lockref {
 #endif
 		struct {
 			spinlock_t lock;
-			int count;
+			atomic_t count;
 		};
 	};
 };
@@ -43,9 +43,29 @@ extern void lockref_mark_dead(struct lockref *);
 extern int lockref_get_not_dead(struct lockref *);
 
 /* Must be called under spinlock for reliable results */
-static inline int __lockref_is_dead(const struct lockref *l)
+static inline int __lockref_is_dead(const struct lockref *lockref)
 {
-	return ((int)l->count < 0);
+	return atomic_read(&lockref->count) < 0;
+}
+
+static inline int __lockref_read(const struct lockref *lockref)
+{
+	return atomic_read(&lockref->count);
+}
+
+static inline void __lockref_set(struct lockref *lockref, int count)
+{
+	atomic_set(&lockref->count, count);
+}
+
+static inline void __lockref_inc(struct lockref *lockref)
+{
+	atomic_inc(&lockref->count);
+}
+
+static inline void __lockref_dec(struct lockref *lockref)
+{
+	atomic_dec(&lockref->count);
 }
 
 #endif /* __LINUX_LOCKREF_H */
