diff --git a/lib/lockref.c b/lib/lockref.c
index 5a92189..d77978d 100644
--- a/lib/lockref.c
+++ b/lib/lockref.c
@@ -40,13 +40,13 @@
 void lockref_get(struct lockref *lockref)
 {
 	CMPXCHG_LOOP(
-		new.count++;
+		__lockref_inc(&new);
 	,
 		return;
 	);
 
 	spin_lock(&lockref->lock);
-	lockref->count++;
+	__lockref_inc(lockref);
 	spin_unlock(&lockref->lock);
 }
 EXPORT_SYMBOL(lockref_get);
@@ -61,8 +61,8 @@ int lockref_get_not_zero(struct lockref *lockref)
 	int retval;
 
 	CMPXCHG_LOOP(
-		new.count++;
-		if (old.count <= 0)
+		__lockref_inc(&new);
+		if (__lockref_read(&old) <= 0)
 			return 0;
 	,
 		return 1;
@@ -70,8 +70,8 @@ int lockref_get_not_zero(struct lockref *lockref)
 
 	spin_lock(&lockref->lock);
 	retval = 0;
-	if (lockref->count > 0) {
-		lockref->count++;
+	if (__lockref_read(lockref) > 0) {
+		__lockref_inc(lockref);
 		retval = 1;
 	}
 	spin_unlock(&lockref->lock);
@@ -88,17 +88,17 @@ EXPORT_SYMBOL(lockref_get_not_zero);
 int lockref_get_or_lock(struct lockref *lockref)
 {
 	CMPXCHG_LOOP(
-		new.count++;
-		if (old.count <= 0)
+		__lockref_inc(&new);
+		if (__lockref_read(&old) <= 0)
 			break;
 	,
 		return 1;
 	);
 
 	spin_lock(&lockref->lock);
-	if (lockref->count <= 0)
+	if (__lockref_read(lockref) <= 0)
 		return 0;
-	lockref->count++;
+	__lockref_inc(lockref);
 	spin_unlock(&lockref->lock);
 	return 1;
 }
@@ -114,11 +114,11 @@ EXPORT_SYMBOL(lockref_get_or_lock);
 int lockref_put_return(struct lockref *lockref)
 {
 	CMPXCHG_LOOP(
-		new.count--;
-		if (old.count <= 0)
+		__lockref_dec(&new);
+		if (__lockref_read(&old) <= 0)
 			return -1;
 	,
-		return new.count;
+		return __lockref_read(&new);
 	);
 	return -1;
 }
@@ -132,17 +132,17 @@ EXPORT_SYMBOL(lockref_put_return);
 int lockref_put_or_lock(struct lockref *lockref)
 {
 	CMPXCHG_LOOP(
-		new.count--;
-		if (old.count <= 1)
+		__lockref_dec(&new);
+		if (__lockref_read(&old) <= 1)
 			break;
 	,
 		return 1;
 	);
 
 	spin_lock(&lockref->lock);
-	if (lockref->count <= 1)
+	if (__lockref_read(lockref) <= 1)
 		return 0;
-	lockref->count--;
+	__lockref_dec(lockref);
 	spin_unlock(&lockref->lock);
 	return 1;
 }
@@ -155,7 +155,7 @@ EXPORT_SYMBOL(lockref_put_or_lock);
 void lockref_mark_dead(struct lockref *lockref)
 {
 	assert_spin_locked(&lockref->lock);
-	lockref->count = -128;
+	__lockref_set(lockref, -128);
 }
 EXPORT_SYMBOL(lockref_mark_dead);
 
@@ -169,8 +169,8 @@ int lockref_get_not_dead(struct lockref *lockref)
 	int retval;
 
 	CMPXCHG_LOOP(
-		new.count++;
-		if (old.count < 0)
+		__lockref_inc(&new);
+		if (__lockref_read(&old) < 0)
 			return 0;
 	,
 		return 1;
@@ -178,8 +178,8 @@ int lockref_get_not_dead(struct lockref *lockref)
 
 	spin_lock(&lockref->lock);
 	retval = 0;
-	if (lockref->count >= 0) {
-		lockref->count++;
+	if (__lockref_read(lockref) >= 0) {
+		__lockref_inc(lockref);
 		retval = 1;
 	}
 	spin_unlock(&lockref->lock);
