diff --git a/net/batman-adv/sysfs.c b/net/batman-adv/sysfs.c
index 02d96f2..08470936 100644
--- a/net/batman-adv/sysfs.c
+++ b/net/batman-adv/sysfs.c
@@ -147,7 +147,7 @@ struct batadv_attribute batadv_attr_##_name = {		\
 
 #define BATADV_ATTR_SIF_STORE_BOOL(_name, _post_func)			\
 ssize_t batadv_store_##_name(struct kobject *kobj,			\
-			     struct attribute *attr, char *buff,	\
+			     struct kobj_attribute *attr, char *buff,	\
 			     size_t count)				\
 {									\
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);	\
@@ -159,7 +159,7 @@ ssize_t batadv_store_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_SIF_SHOW_BOOL(_name)				\
 ssize_t batadv_show_##_name(struct kobject *kobj,			\
-			    struct attribute *attr, char *buff)		\
+			    struct kobj_attribute *attr, char *buff)	\
 {									\
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);	\
 									\
@@ -179,7 +179,7 @@ ssize_t batadv_show_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_SIF_STORE_UINT(_name, _var, _min, _max, _post_func)	\
 ssize_t batadv_store_##_name(struct kobject *kobj,			\
-			     struct attribute *attr, char *buff,	\
+			     struct kobj_attribute *attr, char *buff,	\
 			     size_t count)				\
 {									\
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);	\
@@ -192,7 +192,7 @@ ssize_t batadv_store_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_SIF_SHOW_UINT(_name, _var)				\
 ssize_t batadv_show_##_name(struct kobject *kobj,			\
-			    struct attribute *attr, char *buff)		\
+			    struct kobj_attribute *attr, char *buff)	\
 {									\
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);	\
 									\
@@ -210,7 +210,7 @@ ssize_t batadv_show_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_VLAN_STORE_BOOL(_name, _post_func)			\
 ssize_t batadv_store_vlan_##_name(struct kobject *kobj,			\
-				  struct attribute *attr, char *buff,	\
+				  struct kobj_attribute *attr, char *buff,\
 				  size_t count)				\
 {									\
 	struct batadv_priv *bat_priv = batadv_vlan_kobj_to_batpriv(kobj);\
@@ -226,7 +226,7 @@ ssize_t batadv_store_vlan_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_VLAN_SHOW_BOOL(_name)				\
 ssize_t batadv_show_vlan_##_name(struct kobject *kobj,			\
-				 struct attribute *attr, char *buff)	\
+				 struct kobj_attribute *attr, char *buff)\
 {									\
 	struct batadv_priv *bat_priv = batadv_vlan_kobj_to_batpriv(kobj);\
 	struct batadv_softif_vlan *vlan = batadv_kobj_to_vlan(bat_priv,	\
@@ -248,7 +248,7 @@ ssize_t batadv_show_vlan_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_HIF_STORE_UINT(_name, _var, _min, _max, _post_func)	\
 ssize_t batadv_store_##_name(struct kobject *kobj,			\
-			     struct attribute *attr, char *buff,	\
+			     struct kobj_attribute *attr, char *buff,	\
 			     size_t count)				\
 {									\
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);	\
@@ -269,7 +269,7 @@ ssize_t batadv_store_##_name(struct kobject *kobj,			\
 
 #define BATADV_ATTR_HIF_SHOW_UINT(_name, _var)				\
 ssize_t batadv_show_##_name(struct kobject *kobj,			\
-			    struct attribute *attr, char *buff)		\
+			    struct kobj_attribute *attr, char *buff)		\
 {									\
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);	\
 	struct batadv_hard_iface *hard_iface;				\
@@ -339,13 +339,13 @@ static int batadv_store_bool_attr(char *buff, size_t count,
 static inline ssize_t
 __batadv_store_bool_attr(char *buff, size_t count,
 			 void (*post_func)(struct net_device *),
-			 struct attribute *attr,
+			 struct kobj_attribute *attr,
 			 atomic_t *attr_store, struct net_device *net_dev)
 {
 	bool changed;
 	int ret;
 
-	ret = batadv_store_bool_attr(buff, count, net_dev, attr->name,
+	ret = batadv_store_bool_attr(buff, count, net_dev, attr->attr.name,
 				     attr_store, &changed);
 	if (post_func && changed)
 		post_func(net_dev);
@@ -394,13 +394,13 @@ static int batadv_store_uint_attr(const char *buff, size_t count,
 static ssize_t __batadv_store_uint_attr(const char *buff, size_t count,
 					int min, int max,
 					void (*post_func)(struct net_device *),
-					const struct attribute *attr,
+					const struct kobj_attribute *attr,
 					atomic_t *attr_store,
 					struct net_device *net_dev)
 {
 	int ret;
 
-	ret = batadv_store_uint_attr(buff, count, net_dev, attr->name, min, max,
+	ret = batadv_store_uint_attr(buff, count, net_dev, attr->attr.name, min, max,
 				     attr_store);
 	if (post_func && ret)
 		post_func(net_dev);
@@ -409,7 +409,7 @@ static ssize_t __batadv_store_uint_attr(const char *buff, size_t count,
 }
 
 static ssize_t batadv_show_bat_algo(struct kobject *kobj,
-				    struct attribute *attr, char *buff)
+				    struct kobj_attribute *attr, char *buff)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
 
@@ -423,7 +423,7 @@ static void batadv_post_gw_reselect(struct net_device *net_dev)
 	batadv_gw_reselect(bat_priv);
 }
 
-static ssize_t batadv_show_gw_mode(struct kobject *kobj, struct attribute *attr,
+static ssize_t batadv_show_gw_mode(struct kobject *kobj, struct kobj_attribute *attr,
 				   char *buff)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
@@ -455,7 +455,7 @@ static ssize_t batadv_show_gw_mode(struct kobject *kobj, struct attribute *attr,
 }
 
 static ssize_t batadv_store_gw_mode(struct kobject *kobj,
-				    struct attribute *attr, char *buff,
+				    struct kobj_attribute *attr, char *buff,
 				    size_t count)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
@@ -530,7 +530,7 @@ static ssize_t batadv_store_gw_mode(struct kobject *kobj,
 }
 
 static ssize_t batadv_show_gw_sel_class(struct kobject *kobj,
-					struct attribute *attr, char *buff)
+					struct kobj_attribute *attr, char *buff)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
 
@@ -548,7 +548,7 @@ static ssize_t batadv_show_gw_sel_class(struct kobject *kobj,
 }
 
 static ssize_t batadv_store_gw_sel_class(struct kobject *kobj,
-					 struct attribute *attr, char *buff,
+					 struct kobj_attribute *attr, char *buff,
 					 size_t count)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
@@ -574,7 +574,7 @@ static ssize_t batadv_store_gw_sel_class(struct kobject *kobj,
 }
 
 static ssize_t batadv_show_gw_bwidth(struct kobject *kobj,
-				     struct attribute *attr, char *buff)
+				     struct kobj_attribute *attr, char *buff)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
 	u32 down, up;
@@ -587,7 +587,7 @@ static ssize_t batadv_show_gw_bwidth(struct kobject *kobj,
 }
 
 static ssize_t batadv_store_gw_bwidth(struct kobject *kobj,
-				      struct attribute *attr, char *buff,
+				      struct kobj_attribute *attr, char *buff,
 				      size_t count)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
@@ -608,7 +608,7 @@ static ssize_t batadv_store_gw_bwidth(struct kobject *kobj,
  * error code in case of failure
  */
 static ssize_t batadv_show_isolation_mark(struct kobject *kobj,
-					  struct attribute *attr, char *buff)
+					  struct kobj_attribute *attr, char *buff)
 {
 	struct batadv_priv *bat_priv = batadv_kobj_to_batpriv(kobj);
 
@@ -627,7 +627,7 @@ static ssize_t batadv_show_isolation_mark(struct kobject *kobj,
  * Return: 'count' on success or a negative error code in case of failure
  */
 static ssize_t batadv_store_isolation_mark(struct kobject *kobj,
-					   struct attribute *attr, char *buff,
+					   struct kobj_attribute *attr, char *buff,
 					   size_t count)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
@@ -876,7 +876,7 @@ void batadv_sysfs_del_vlan(struct batadv_priv *bat_priv,
 }
 
 static ssize_t batadv_show_mesh_iface(struct kobject *kobj,
-				      struct attribute *attr, char *buff)
+				      struct kobj_attribute *attr, char *buff)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
 	struct batadv_hard_iface *hard_iface;
@@ -981,7 +981,7 @@ static void batadv_store_mesh_iface_work(struct work_struct *work)
 }
 
 static ssize_t batadv_store_mesh_iface(struct kobject *kobj,
-				       struct attribute *attr, char *buff,
+				       struct kobj_attribute *attr, char *buff,
 				       size_t count)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
@@ -1012,7 +1012,7 @@ static ssize_t batadv_store_mesh_iface(struct kobject *kobj,
 }
 
 static ssize_t batadv_show_iface_status(struct kobject *kobj,
-					struct attribute *attr, char *buff)
+					struct kobj_attribute *attr, char *buff)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
 	struct batadv_hard_iface *hard_iface;
@@ -1059,7 +1059,7 @@ static ssize_t batadv_show_iface_status(struct kobject *kobj,
  * Return: 'count' on success or a negative error code in case of failure
  */
 static ssize_t batadv_store_throughput_override(struct kobject *kobj,
-						struct attribute *attr,
+						struct kobj_attribute *attr,
 						char *buff, size_t count)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
@@ -1097,7 +1097,7 @@ static ssize_t batadv_store_throughput_override(struct kobject *kobj,
 }
 
 static ssize_t batadv_show_throughput_override(struct kobject *kobj,
-					       struct attribute *attr,
+					       struct kobj_attribute *attr,
 					       char *buff)
 {
 	struct net_device *net_dev = batadv_kobj_to_netdev(kobj);
